/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.register.services.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Register service. Represents a row in the &quot;Register&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.register.services.model.impl.RegisterModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.register.services.model.impl.RegisterImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Register
 * @generated
 */
@ProviderType
public interface RegisterModel extends BaseModel<Register> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a register model instance should use the {@link Register} interface instead.
	 */

	/**
	 * Returns the primary key of this register.
	 *
	 * @return the primary key of this register
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this register.
	 *
	 * @param primaryKey the primary key of this register
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the rid of this register.
	 *
	 * @return the rid of this register
	 */
	public long getRid();

	/**
	 * Sets the rid of this register.
	 *
	 * @param rid the rid of this register
	 */
	public void setRid(long rid);

	/**
	 * Returns the name of this register.
	 *
	 * @return the name of this register
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this register.
	 *
	 * @param name the name of this register
	 */
	public void setName(String name);

	/**
	 * Returns the surname of this register.
	 *
	 * @return the surname of this register
	 */
	@AutoEscape
	public String getSurname();

	/**
	 * Sets the surname of this register.
	 *
	 * @param surname the surname of this register
	 */
	public void setSurname(String surname);

	/**
	 * Returns the bdate of this register.
	 *
	 * @return the bdate of this register
	 */
	public Date getBdate();

	/**
	 * Sets the bdate of this register.
	 *
	 * @param bdate the bdate of this register
	 */
	public void setBdate(Date bdate);

	/**
	 * Returns the email of this register.
	 *
	 * @return the email of this register
	 */
	@AutoEscape
	public String getEmail();

	/**
	 * Sets the email of this register.
	 *
	 * @param email the email of this register
	 */
	public void setEmail(String email);

}